<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAACAgAAABACAAqBAAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAAQBAAAEBAQACQQBAA0IAAAPDw8AFQkBABoLAAASDQgAGBEIAAQM
        FAAREhAAHBgSACEOAAAlEQAAKRMBACAVCAAmHA8AKxwIADIWAAA0GgAAPBsAADkhAAAlIh0ADxohABIl
        MQAnJycAKCgoADIvKwA2NDIARB4AAEQnAABMIgAARSkCAEsrAABTJAAAWicAAFQtAABcKQAAUzAAAGQs
        AABrLwAAbjMAAGw/AABxMgAAezYAAHE9AAAKeBAAEX8ZABV/HQAYfh4AHH4gABQvQwATPV0AITNDABI7
        YgANP3EAHUlkABNGcgAiU24AYGBgAGtrawBzc3MAfX19AIM6AACMPgAAi0UAAIRMAACTQQAAmkcAAI1S
        AACSUwAAnFIAAKtVAACsWQAAu2QAALppAADBagAADY8VABaDHwAMlBIAFJ0fABqNJwAegygAFq8iAB22
        KwAdtiwAKaQ+ACK7MwAjuzQAI7w0ACjBOwAowT0ALalDAC6zRgA0uU4AOL1UACGJbgAusmwAMr9iACys
        cAA2uXoAWb93AGSiZABuqG4AcKd6AC3GRAAvyEYAMstLADPMTQA0zU4ANs9RADXFXgA4z1gAONFVADvU
        WAA91lsANsBtAEDZYABK1W8ARN1oAE3acwBI4WwATOFzAEzlcgBO53UAVeV/AFDpeQBS63wAU+x9AFTt
        fwASUIwAIF2GAA9drwAea6wAHXOjABxnsAApbagAK3urACBstgAlcbUAKne2ACx4tQAmcLgALXi6ADB+
        tQBAfrkAFG7MABdxwQAcc8MADG3QAA112wAQedoAGHncACeYhQAwposAJoSiADiHsgBCgr0AQZqyAE6Y
        uwBakLMARM+CAGbMiQBp1Y8AVuWAAFzlhwBW74EAV/CDAFnyhgBa84gAXPWKAF3zjABd9owAXuaXAGbl
        kQBv5ZoAYPiQAGn6mgBiz7MAdfunAHv/rgAth8cANITAAA6C7QAeg+UAGojhABeN7wAQjPEAFpLzABad
        +gAYnfkAJ4/mACWL6AAvkukANZzmADKf7wAmnvMAKJ3yABqm/gAdqf8AI6z+ACis/QAxpfQAN6z3ADGu
        +gAssf8AM7X+AD60+gA3uP8AO7n+AEqIwQBOn8UAUqHZAF+s2wBnrNYAaLHbAEWd4QBIqeEAXbjvAEKy
        9gBDvf4AULv1AFy88wBmuOAARsD/AEvC/wBRxv8AVcj/AFvK/gBix/UAYc7+AGXR/wBr1P4AetD3AHfX
        +gBz2f8Ae9z+AI2NjQCTk5MAjbuNAJO+kwCVv5UAo6OjAJfBlwCF/7gAhKzSAJH/xQCDx+cAjdPvAIvT
        8ACE3f0Aid//AJPc9wCA4P8AjOD+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        8fDw8PDw8PDw8PDw8PDw8PQAAAAAAAAAAAAAAAAAaE9fUVBQUFBQUFBQUFBQUFBQTi8AAAAAAAAAAAAA
        AAAyd4BWVFRUVFRUVFRUVFRUVFRZXvAAAAAAAAAAAAAAADB+gFlWVlZWVlZWVlZWVlZWVmtg8QAAAAAA
        AAAAAAAAMH6AXFlZWVlZWVlZWVlZWVlZc1cAAAAAAAAAAAAAAAAwpahqXFxcXFxcXFxcXFxcXFx7UgAA
        AAAAAAAAAAAAADB+qGxqampqampqampqampqbHkyAAAAAAAAAAAAAAAAMH6pcmxsb2xsb2xsb2xsb2+C
        XWcAAAAAAAAAAAAAAAAwfqpzc3Nyc3Jzc2NkZGJweqozAAAAAAAAAAAAAAAAADB+qnh4c3h2dZqHj5CP
        i4icYWkAAAAAAAAAAAAAAAAAMKWqenh4eGWHt9XZwsG5mZOFoQAAAAAAAAAAAAAAAAAwpbF7fHubitbb
        xr/Hx8e+vLiWjwAAAAAAAAAAAAAAADCmsoCAoorY283KycnJyMjHvriXngAAAAAAAAAAAAAAMK+1tK6c
        2OrSzc/Pz8nPycnJyL2Y0wAAAAAAAAAAAAAysPX1s5H95dLS0s/Pzc/Pz8nPybuUAAAAAAAAAAAAADOk
        9/ef1/zl4uHh4dLdz8/Pz83Pyrn2AAAAAAAAAAAAaFNmo4r4++Tk4uLi4eHh4eHS0tLNxZIAAAAAAAAA
        AAAAAPHwjvn85eXl5OTk5OLi4uHQzMzGjgAAAAAAAAAAAAAAAACO+vzp6efn5+Tn5OTcxMCVgzg3AAAA
        AAAAAAAAAAAAAInW/Ozp6enp6efew4Y6CgAAAAAFAAAAAAAAAAAAAAAANjTg7ezs7Onp3rY1CgMDAwAA
        AAAAAAAAAAAAAAAAAAADDxmg7f7+7NqEAgcPDw0NDQQDAAAAAAAAAAAAAAAAABclExjU7P7mOQUUFRUU
        Ew8PDg0bAAAAAAAAAAAAAAAAPCVAIAs7nTkNICYjIyAeHhUVBAAAAAAAAAAAAAAAAAAAEUhBKBMMDygs
        KSkoJiYjIxUbAAAAAAAAAAAAAAAAAAA/HkpFRERBQUBALS0sLCwiCQAAAAAAAAAAAAAAAAAAAAAcIk1J
        RERERERBQUBBLgk9AAAAAAAAAAAAAAAAAAAAAAA/EkNMS0pJSUpKRyEXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAHRQnQ0dGKxYRPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv7u/zAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////AAB//AAAP/wAAB/8AAAf/AAAP/wAAD/8AAA//AA
        AP/wAAH/8AAB//AAAf/wAAD/8AAAf/AAAD/wAAA/8AAAH/AAAB/8AAAf/wAAH/8AAA//AAAP/wAAD/8A
        AA//AAAf/4AAH/+AAD//wAA//+AA///4Af///w///////ygAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADG3cYHVZlVTVWZVaJVmVWqVZlVqlWZ
        VapVmVWqVZlVqlWZVapVmVWqVZlVqlWZVapVmVWqVZlVqlWZVapVmVWqVZlVqlWZVapVmVWbVZlVTgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnAZETghz7NLlO/xSd
        H/8MlBL/DJQS/wyUEv8MlBL/DJQS/wyUEv8MlBL/DJQS/wyUEv8MlBL/DJQS/wyUEv8MlBL/DJQS/w2P
        Ff8KeBD/VZlVYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACnYQ8ErV
        b/9S63z/HbYs/xavIv8WryL/Fq8i/xavIv8WryL/Fq8i/xavIv8WryL/Fq8i/xavIv8WryL/Fq8i/xav
        Iv8WryL/I7s0/y6zRv9VmVWqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAARfxn/VeV//1Psff8jvDT/HbYr/x22K/8dtiv/HbYr/x22K/8dtiv/HbYr/x22K/8dtiv/HbYr/x22
        K/8dtiv/HbYr/x22K/8vyEb/OL1U/1WZVZ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABF/Gf9V5X//Ve5//yjBO/8iuzP/Irsz/yK7M/8iuzP/Irsz/yK7M/8iuzP/Irsz/yK7
        M/8iuzP/Irsz/yK7M/8iuzP/Irsz/zvUWP8ppD7/VZlVewAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEX8Z/1Xlf/9W74H/LcZE/yjBPf8owT3/KME9/yjBPf8owT3/KME9/yjB
        Pf8owT3/KME9/yjBPf8owT3/KME9/yjBPf8owT3/TOFz/xqNJ/9VmVU8AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARfxn/VeV//1fwg/8yy0v/LcZE/y3GRP8txkT/LcZE/y3G
        RP8txkT/LcZE/y3GRP8txkT/LcZE/y3GRP8txkT/LcZE/zPMTf9N2nP/CnYQ8MbdxgoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABF/Gf9V5X//WfKG/zjRVP80zU7/NM1O/zTN
        Tv80zU7/NM1O/zTNTv80zU7/NM1O/zTNTv80zU7/NM1O/zTNTv82z1H/VO1//y2pQ/8AZgCbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEX8Z/1Xlf/9a84j/PdZb/znS
        Vv850lb/OdJW/znSVv850lb/OdJW/zjPWP8yv2L/LKxw/yyscP8usmz/NcVe/0jhbf9d84z/CHIM6XGq
        cUYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARfxn/VeV//1z1
        iv9D3GT/QNlg/0DZYP9A2WD/QNlg/zbAbf8nmIX/HXGm/yVxtf8teLr/J3G4/yBstv8cZ7D/JoGk/yGJ
        bv8edi+ixt3GBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABF/
        Gf9V5X//XfaM/0jha/9F3mj/Rd5o/0TcaP82uXr/HXag/zSEwP9Sodn/RZ3h/y+S6f8li+j/HoPl/xh5
        3P8Ubsz/D12v/ytxnsZilsUxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAEX8Z/1blgP9g+JD/Tud1/0zlcv9M5XL/MKaL/yt6sf9frN3/Xbjv/ymf9P8Ynfn/Gqf+/xqn
        //8Ypf7/Fpz6/xCM8f8NgOz/DG3Q/xFjsulIhLw+5O31AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAASfxv/XOWH/2n6mv9V7H//UOl5/0TPgv8oeK3/aLLd/1y88/8xrvr/Jq7+/ySt
        //8irP//IKv//x6p//8cqf//Gqb+/xee+v8Phe7/DXXb/xJircuwyuIsAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABR/Hf9m5ZH/e/+u/3X7p/9e5pf/Joeg/2mw2v960Pf/Orj+/zO1
        //8wtP//L7P//yyy//8qsP//KK///yau//8krf//Iqz//x6n/f8WkvP/EHna/xNkrsPK3OsDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFn8e/2/lmv+F/7j/hf+4/2LPs/8wfrX/k9z3/17I
        /P89u///PLr//zm4//83uP//Nbb//zO1//8xtP//L7P//yyx//8rsf//KK///yWq/f8Xje//FG/B+2KW
        xTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOdhTwadWP/5H/xf+R/8X/QZqy/2es
        1v+H3P3/WMj+/0jB//9GwP//RL///0K9//8/vP//Prv//zu6//85uf//N7f//zW2//8ztf//MbT//ymo
        +v8aiOH/SIS8q+Tt9QgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFnAZEbgiX7Wb93/2bM
        if8uf6n/g8fn/4Td/v9VyP//UcX//0/F//9Mw///S8L//0jB//9GwP//RL7//0K+//9AvP//Prv//zu6
        //86uf//NbX+/yae8/8UYanPsMriJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxt3GB1WZ
        VU1VmVWiVZlVqip3tv+N0+//id///13N//9bzP//Wcr//1fJ//9VyP//U8f//1HG//9OxP//TMP//0rC
        //9Hv/7/PrT6/zes9/8xpfT/KJvx/x5tseuwyuJBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAK3i3/4vT8P+L4P//ZtL//2TQ//9iz///YM7//17N//9by///Wcv//1fJ
        //9VyP//QrL2/zKf7/8nj+b/HHPD/xJQjP8NP3H/DTdf+TxNW10AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcZKPwX6zZ/43g/v9y2P//btb//2zV//9q1P//aNP//2bR
        //9jz/7/UL33/zWc5v8ea6z/E0Zy/wMLE/8AAAD/AAAA/wAAAP8AAAD/AAAA8AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUZK+IUL0P/Zrjg/3vb/v932///ddr//3PY
        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
</value>
  </data>
</root>